datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "go run github.com/prisma/prisma-client-go"
  output        = "../server/src/db"
  package       = "db"
  binaryTargets = ["native"]
}

enum AuthMethod {
  GITHUB
}

model User {
  id         String     @id @default(uuid())
  authID     String     @unique
  authMethod AuthMethod
  github     GitHub?

  name  String
  admin Boolean @default(false)

  servers Server[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GitHub {
  userId String @id
  user   User   @relation(fields: [userId], references: [id])

  account String
}

model Server {
  id String @id @default(uuid())

  // essential data (short names to save data!)
  ip String  @unique
  hn String
  pc Int
  pm Int
  gm String
  la String
  pa Boolean
  vn String
  ru Rule[]

  // domain name for de-duplication purposes
  domain String?

  // rich data (entered by server owners via the web UI)
  description String?
  banner      String?

  // user who owns this server
  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  active    Boolean
  updatedAt DateTime @updatedAt
}

model Rule {
  id       Int     @id @default(autoincrement())
  name     String
  value    String
  Server   Server? @relation(fields: [serverId], references: [id])
  serverId String?

  @@unique([name, serverId], name: "Rule_serverId_rule_name_index")
}
